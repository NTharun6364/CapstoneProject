{"name": "test_place_order_flow", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.TimeoutException: Message:", "trace": "driver = <selenium.webdriver.remote.webdriver.WebDriver (session=\"4345bbb372f5f6c05322557291b15d4cef1ed811\")>\n\n    @allure.feature('Place Order')\n    def test_place_order_flow(driver):\n        # load test user data\n        data_file = os.path.join(os.path.dirname(__file__), 'users.csv')\n        with open(data_file, newline='') as f:\n            reader = csv.DictReader(f)\n            users = list(reader)\n        user = users[0]\n    \n        home = HomePage(driver)\n        home.open_first_product()\n    \n        product = ProductPage(driver)\n        alert_text = product.add_to_cart_and_accept_alert()\n    \n        cart = CartPage(driver)\n        cart.go_to_cart()\n        cart.place_order()\n    \n        checkout = CheckoutPage(driver)\n        checkout.fill_order(user['name'], user['country'], user['city'],\n                            user['card'], user['month'], user['year'])\n>       checkout.confirm_purchase()\n\ntests\\test_place_order.py:31: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\npages\\checkout_page.py:25: in confirm_purchase\n    self.wait.until(EC.visibility_of_element_located((By.XPATH, CONFIRMATION_HEADER_XPATH)))\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"4345bbb372f5f6c05322557291b15d4cef1ed811\")>, method = <function visibility_of_element_located.<locals>._predicate at 0x00000206114DEB60>, message = ''\n\n    def until(self, method: Callable[[D], Union[Literal[False], T]], message: str = \"\") -> T:\n        \"\"\"Wait until the method returns a value that is not False.\n    \n        Calls the method provided with the driver as an argument until the\n        return value does not evaluate to ``False``.\n    \n        Parameters:\n        -----------\n        method: callable(WebDriver)\n            - A callable object that takes a WebDriver instance as an argument.\n    \n        message: str\n            - Optional message for :exc:`TimeoutException`\n    \n        Return:\n        -------\n        object: T\n            - The result of the last call to `method`\n    \n        Raises:\n        -------\n        TimeoutException\n            - If 'method' does not return a truthy value within the WebDriverWait\n            object's timeout\n    \n        Example:\n        --------\n        >>> from selenium.webdriver.common.by import By\n        >>> from selenium.webdriver.support.ui import WebDriverWait\n        >>> from selenium.webdriver.support import expected_conditions as EC\n    \n        # Wait until an element is visible on the page\n        >>> wait = WebDriverWait(driver, 10)\n        >>> element = wait.until(EC.visibility_of_element_located((By.ID, \"exampleId\")))\n        >>> print(element.text)\n        \"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.monotonic() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, \"screen\", None)\n                stacktrace = getattr(exc, \"stacktrace\", None)\n            if time.monotonic() > end_time:\n                break\n            time.sleep(self._poll)\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message:\n\nvenv\\Lib\\site-packages\\selenium\\webdriver\\support\\wait.py:138: TimeoutException"}, "attachments": [{"name": "log", "source": "5a0c6e13-f6e6-43d3-a9da-65089151d7fd-attachment.txt", "type": "text/plain"}, {"name": "stderr", "source": "d65eb744-deb0-4dbb-be86-33a32a3d9526-attachment.txt", "type": "text/plain"}], "start": 1761728321531, "stop": 1761728354097, "uuid": "6212015f-80dc-47cf-aba9-058905f8e3a8", "historyId": "4f74172bf10135fb4afff49bfb34c0c6", "testCaseId": "4f74172bf10135fb4afff49bfb34c0c6", "fullName": "tests.test_place_order#test_place_order_flow", "labels": [{"name": "feature", "value": "Place Order"}, {"name": "parentSuite", "value": "tests"}, {"name": "suite", "value": "test_place_order"}, {"name": "host", "value": "ASCENDI-N7SB05U"}, {"name": "thread", "value": "6632-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.test_place_order"}], "titlePath": ["tests", "test_place_order.py"]}